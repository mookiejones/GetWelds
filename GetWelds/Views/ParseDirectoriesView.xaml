<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
     xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:converters="clr-namespace:GetWelds.Converters"

    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"

    xmlns:custom="http://www.galasoft.ch/mvvmlight"
    xmlns:resources="clr-namespace:GetWelds.Resources"
    xmlns:selectors="clr-namespace:GetWelds.Selectors"
    x:Class="GetWelds.Views.ParseDirectoriesView"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="500" DataContext="{Binding Directories, Source={StaticResource Locator}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/GetWelds;component/Styles/Styles.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.DataGrid.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:ZoneFileTextConverter x:Key="ZoneFileTextConverter" />
            <selectors:RobotWeldSelectors x:Key="WeldSelectors"  Fanuc="{StaticResource FanucPositionsTemplate}" Kuka="{StaticResource KUKAPositionsTemplate}" None="{StaticResource Null}" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="Grid" Grid.Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Expander x:Name="Expander" Grid.Column="2" ExpandDirection="Left" IsExpanded="False" DataContext="{Binding SelectedItem, ElementName=DataGrid}"
>
            <TextBox>
                <TextBox.Text>
                    <MultiBinding Converter="{StaticResource ZoneFileTextConverter}">
                        <Binding Path="SelectedZone" />
                        <Binding Path="Zip" />
                    </MultiBinding>
                </TextBox.Text>
            </TextBox>
        </Expander>
        <!--  ToolTip="{StaticResource ZipToolTip}" -->
        <DataGrid Style="{StaticResource MetroDataGrid}" x:Name="DataGrid" Grid.Column="0" AllowDrop="True"   AutoGenerateColumns="False" AlternatingRowBackground="LightSteelBlue" ItemsSource="{Binding Robots}"   SelectedItem="{Binding SelectedRobot, Mode=TwoWay}"    UseLayoutRounding="True" Grid.ColumnSpan="1">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{x:Static resources:MenuResources.ClearItems}" Command="{Binding ClearItemsCommand, Mode=OneWay}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <!-- CellStyle="{Binding Mode=OneWay, Source={StaticResource TextColumnToolTip}}"  -->
                <DataGridTextColumn  Binding="{Binding Name, NotifyOnSourceUpdated=True}" Header="Robot Name" Width="*"  IsReadOnly="True" />
                <DataGridTextColumn   Binding="{Binding Process1, NotifyOnSourceUpdated=True}" Header="{x:Static resources:LabelResources.Process1}" Width="*"  IsReadOnly="True" />
                <DataGridTextColumn   Binding="{Binding Process2, NotifyOnSourceUpdated=True}" Header="{x:Static resources:LabelResources.Process2}" Width="*"  IsReadOnly="True" />
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Drop">
                    <custom:EventToCommand PassEventArgsToCommand="True" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </DataGrid>
        <Grid Grid.Column="1" DataContext="{Binding SelectedRobot,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}" x:Name="RightGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition  Height="*" />
                <RowDefinition  Height="Auto" />
                <RowDefinition  Height="Auto" />
                <RowDefinition  Height="Auto" />
            </Grid.RowDefinitions>
            <Expander Header="{Binding Name}" x:Name="StyleGroupBox" IsExpanded="True">

                <DataGrid x:Name="Styles" IsReadOnly="True" AlternatingRowBackground="LightSteelBlue" ItemsSource="{Binding Styles}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedStyle, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True" x:Name="StyleColumn"  Binding="{Binding Style}" Width="Auto" Header="Style #" />
                        <DataGridTextColumn IsReadOnly="True" x:Name="StyleNameColumn" Binding="{Binding StyleProgramName}" Width="*" Header="Style Name" />
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
            <Expander x:Name="Positions" Grid.Row="1" IsExpanded="True">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static resources:LabelResources.Positions}" />
                            <CheckBox Content="Show Welds Only" Grid.Column="1"  >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <custom:EventToCommand  Command="{Binding Directories.SelectedRobot.SelectedStyle.FilterWeldsCommand, Source={StaticResource Locator}}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <custom:EventToCommand  Command="{Binding Directories.SelectedRobot.SelectedStyle.FilterWeldsCommand, Source={StaticResource Locator}}"/>
                                    </i:EventTrigger>

                                </i:Interaction.Triggers>
                            </CheckBox>
                        </Grid>
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <Grid>
                    <ContentControl Content="{Binding SelectedItem,ElementName=DataGrid}" ContentTemplateSelector="{StaticResource WeldSelectors}" ScrollViewer.CanContentScroll="True" />
                </Grid>
            </Expander>
            <Expander Header="{x:Static resources:LabelResources.ToolData}"  Grid.Row="2" x:Name="ToolDataGroupBox" IsExpanded="False">
                <DataGrid ItemsSource="{Binding Tools}" AlternatingRowBackground="LightSteelBlue"  AutoGenerateColumns="False" x:Name="ToolsDataGrid" IsReadOnly="True">
                    <DataGrid.Columns>
                        <DataGridTextColumn  Header="Number" Binding="{Binding Number}" x:Name="ToolNumberColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.X}" Binding="{Binding X, StringFormat=\{0:F3\}}" x:Name="XColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.Y}" Binding="{Binding Y, StringFormat=\{0:F3\}}" x:Name="YColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.Z}" Binding="{Binding Z, StringFormat=\{0:F3\}}" x:Name="ZColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.A}" Binding="{Binding A, StringFormat=\{0:F3\}}" x:Name="AColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.B}" Binding="{Binding B, StringFormat=\{0:F3\}}" x:Name="BColumn" />
                        <DataGridTextColumn Header="{x:Static resources:LabelResources.C}" Binding="{Binding C, StringFormat=\{0:F3\}}" x:Name="CColumn" />
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
            <Expander Header="{x:Static resources:LabelResources.Options}" Grid.Row="3"  IsExpanded="False">
                <DataGrid  ItemsSource="{Binding OptionalValues}" IsReadOnly="True" AutoGenerateColumns="False" AlternatingRowBackground="LightSteelBlue">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name}" />
                        <DataGridTextColumn Binding="{Binding Value}" Width="*" />
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
            <Expander Header="{x:Static resources:LabelResources.Zones}" Grid.Row="4" IsExpanded="False">
                <DataGrid x:Name="Zones" IsReadOnly="True" ItemsSource="{Binding Zones}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedZone,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Declaration}" Width="*" />
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
        </Grid>
    </Grid>
</UserControl>